
Create an APP:
	npx create-react-app my-app
	
	npx create-react-app my-app --template typescript
	Using 
		npm create vite@latest
		project name : j2
		select 1 framework : React
react version
	npm view react version
start
	npm start
	npm run dev
Required Npms
	npm i react-router-dom
	npm i prop-types --save 
	npm i react-bootstrap bootstrap 
	npm i react-icons --save
	npm i axios 
	npm i --save react-toastify
	npm i crypto-js
	npm i react-cookie
	npm i --save react-spinners
	npm i react-loading-overlay-ts@1.0.5
	npm i --save react date-fns
	npm i --save react-date-range
	npm i react-error-boundary
	
	npm i json-server && npm i lodash
	
Kendo
	npm install --save @progress/kendo-react-editor @progress/kendo-react-intl @progress/kendo-react-buttons @progress/kendo-react-dropdowns @progress/kendo-react-dialogs @progress/kendo-react-inputs @progress/kendo-react-layout @progress/kendo-react-popup @progress/kendo-react-pdf @progress/kendo-react-progressbars @progress/kendo-drawing @progress/kendo-licensing @progress/kendo-svg-icons
	npm install --save @progress/kendo-theme-default
	import '@progress/kendo-theme-default/dist/all.css';
		add into app.js file
	npm i @progress/kendo-data-query
	npm i @progress/kendo-react-grid
	npm i --save @progress/kendo-licensing
ag grid
	npm i --save ag-grid-community ag-grid-react
	
	
How to activate
	npm install --save @progress/kendo-licensing
	npx kendo-ui-license activate
	
Create a directory
	mkdir components 
	mkdir components,pages
	
Create a file or  files
	copy nul > file.jsx
	
	copy nul > file.tsx && copy nul > files.tsx
	
delete a file	
	del file.jsx
	
	del *.tsx

Java script expersion	
	{`${step >= 1 ? 'active' : ''}`} 
	style={{ paddingLeft: "20px"}}
	
	
	protected route
	
	

  const [objBrand, setobjBrand] = useState<Brand | {}>({} as);
  
  
  https://www.youtube.com/watch?v=98JVaTcoexc&list=PLsZlhayVgqNwHNHeqpCkSgdRV08xrKtzW&index=6
  
  
  https://github.com/ag-grid/react-data-grid/tree/main/getting-started-video-tutorial
  
  
  https://github.com/vikas62081/agGrid/blob/quickFilter/src/App.js
  
  
  import React, { useState } from 'react';
import { DndProvider, useDrag, useDrop } from 'react-dnd';
import { HTML5Backend } from 'react-dnd-html5-backend';


export default function SampleList() {
    const ItemType = 'ITEM';

    const initialItems = [
        { id: '1', content: 'Item 1' },
        { id: '2', content: 'Item 2' },
        { id: '3', content: 'Item 3' },
        { id: '4', content: 'Item 4' },
    ];


    const DraggableItem = ({ item, index, moveItem }) => {
        const [, ref] = useDrag({
            type: ItemType,
            item: { index },
        });

        const [, drop] = useDrop({
            accept: ItemType,
            hover: (draggedItem) => {
                if (draggedItem.index !== index) {
                    moveItem(draggedItem.index, index);
                    draggedItem.index = index;
                }
            },
        });

        return (
            <li ref={(node) => ref(drop(node))} style={{ padding: '16px', border: '1px solid #ddd', marginBottom: '8px', backgroundColor: '#f4f4f4' }}>
                {item.content}
            </li>
        );
    };

    const [items, setItems] = useState(initialItems);

    const moveItem = (fromIndex, toIndex) => {
        const updatedItems = [...items];
        const [movedItem] = updatedItems.splice(fromIndex, 1);
        updatedItems.splice(toIndex, 0, movedItem);
        setItems(updatedItems);
    };
    return (
        <DndProvider backend={HTML5Backend}>
            <ul style={{ listStyleType: 'none', padding: 0 }}>
                {items.map((item, index) => (
                    <DraggableItem key={item.id} index={index} item={item} moveItem={moveItem} />
                ))}
            </ul>
        </DndProvider>
    )
}
